

--Write a Haskell function which takes a list of numbers and generates a binary tree. 

insertElement x EmptyTree= Node x EmptyTree EmptyTree
insertElement x (Node a l r)= if x==a then (Node a l r) 
                              else if x<a
                              then (Node a (insertElement x l) r)
                              else
				        (Node a l (insertElement x r))

inserter []=EmptyTree
inserter (x:xs)= insertElement x (inserter xs)



--Write a Haskell function which returns the minimum value in the given Tree.

data Tree= EmptyTree| Node Int Tree Tree deriving (Show,Eq)
finder (Node a l r)=if l==EmptyTree 
                   then a
                   else finder l


--Write a Haskell function that searches a given element inside a given Tree. It 
should return True if the element is found.


search x EmptyTree=False
search x (Node a l r)= if x==a 
                        then True
                       else if x<a
                        then search x l
                       else
                        search x r
